
import streamlit as st
import pandas as pd
import random

# Simula√ß√£o de dados
def gerar_dados():
    return {
        "Umidade (%)": random.randint(10, 90),
        "F√≥sforo (P)": random.randint(5, 50),
        "Pot√°ssio (K)": random.randint(5, 50),
        "pH": round(random.uniform(4.5, 8.0), 1),
        "Irriga√ß√£o": random.choice(["Ligada", "Desligada"]),
        "Clima": random.choice(["Sol", "Chuva", "Nublado", "Seco"])
    }

def sugestao_irrigacao(clima, umidade):
    if clima == "Chuva":
        return "N√£o irrigar ‚Äî chuva prevista"
    elif umidade < 30:
        return "Irriga√ß√£o recomendada ‚Äî solo seco"
    elif clima == "Seco":
        return "Monitorar ‚Äî clima seco"
    else:
        return "Sem necessidade imediata"

# Interface Streamlit
st.set_page_config(page_title="Dashboard de Irriga√ß√£o", layout="wide")
st.title("üåæ Monitoramento Agr√≠cola")

dados = gerar_dados()

col1, col2 = st.columns(2)

with col1:
    st.subheader("üî¨ N√≠veis do Solo")
    st.metric("Umidade (%)", dados["Umidade (%)"])
    st.metric("F√≥sforo (P)", dados["F√≥sforo (P)"])
    st.metric("Pot√°ssio (K)", dados["Pot√°ssio (K)"])
    st.metric("pH", dados["pH"])

with col2:
    st.subheader("üöø Irriga√ß√£o")
    st.metric("Status", dados["Irriga√ß√£o"])
    st.metric("Clima", dados["Clima"])
    st.info(sugestao_irrigacao(dados["Clima"], dados["Umidade (%)"]))

st.caption("Dados simulados para fins de prototipagem.")